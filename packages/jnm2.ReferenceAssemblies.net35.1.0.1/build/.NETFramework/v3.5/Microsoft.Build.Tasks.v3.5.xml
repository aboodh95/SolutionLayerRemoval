<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Tasks.v3.5</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Tasks.AL">
      <summary>Implements the AL task. Use the AL element in your project file to create and execute this task. For usage and parameter information, see AL (Assembly Linker) Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AL" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <paramref name="commandLine" /> parameter with switches and other information that can go into a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.AlgorithmId">
      <summary>Gets or sets an algorithm to hash all files in a multifile assembly except the file that contains the assembly manifest.</summary>
      <returns>The algorithm to hash all files in a multifile assembly except the file that contains the assembly manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.BaseAddress">
      <summary>Gets or sets the address at which a DLL will be loaded on the user’s computer at run time.</summary>
      <returns>The address at which a DLL will be loaded on the user’s computer at run time.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.CompanyName">
      <summary>Gets or sets the Company field in the assembly.</summary>
      <returns>The Company field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Configuration">
      <summary>Gets or sets the Configuration field in the assembly.</summary>
      <returns>The Configuration field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Copyright">
      <summary>Gets or sets the Copyright field in the assembly.</summary>
      <returns>The Copyright field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Culture">
      <summary>Gets or sets the culture string to associate with the assembly.</summary>
      <returns>The culture string to associate with the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.DelaySign">
      <summary>Gets or sets a Boolean value that indicates whether to place only the public key in the assembly (true) or to fully sign the assembly (false).</summary>
      <returns>true if only the public key is placed in the assembly; false if the assembly is fully signed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Description">
      <summary>Gets or sets the Description field in the assembly.</summary>
      <returns>The Description field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.EmbedResources">
      <summary>Gets or sets the resources to embed in the image that contains the assembly manifest.</summary>
      <returns>The resources to embed in the image that contains the assembly manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.EvidenceFile">
      <summary>Gets or sets the file to embed in the assembly with the resource name of Security.Evidence.</summary>
      <returns>The file to embed in the assembly with the resource name of Security.Evidence.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.Execute">
      <summary>Executes the AL task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.FileVersion">
      <summary>Gets or sets the File Version field in the assembly.</summary>
      <returns>The File Version field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Flags">
      <summary>Gets or sets the Flags field in the assembly.</summary>
      <returns>The Flags field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.GenerateFullPaths">
      <summary>Gets or sets a Boolean value that indicates whether to cause the task to use the absolute path for any files that are reported in an error message.</summary>
      <returns>true if the task will use the absolute path for any files that are reported in an error message; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.GenerateFullPathToTool">
      <summary>Returns the full file path to the AL tool.</summary>
      <returns>The full file path to the AL tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.KeyContainer">
      <summary>Gets or sets a container that holds a key pair.</summary>
      <returns>The container that holds a key pair.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.KeyFile">
      <summary>Gets or sets a file that contains a key pair or just a public key to sign an assembly.</summary>
      <returns>The file that contains a key pair or just a public key to sign an assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.LinkResources">
      <summary>Gets or sets the resource files to link to an assembly.</summary>
      <returns>The resource files to link to an assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.MainEntryPoint">
      <summary>Gets or sets the fully qualified name (class.method) of the method to use as an entry point when converting a module to an executable file.</summary>
      <returns>The fully qualified name (class.method) of the method to use as an entry point when converting a module to an executable file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.OutputAssembly">
      <summary>Gets or sets the name of the file generated by this task.</summary>
      <returns>The name of the file generated by this task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Platform">
      <summary>Gets or sets a string that limits which platform this code can run on; must be one of x86, Itanium, x64, or anycpu.</summary>
      <returns>A string that limits which platform this code can run on; must be one of x86, Itanium, x64, or anycpu.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ProductName">
      <summary>Gets or sets the Product field in the assembly.</summary>
      <returns>The Product field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ProductVersion">
      <summary>Gets or sets the ProductVersion field in the assembly.</summary>
      <returns>The ProductVersion field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ResponseFiles">
      <summary>Gets or sets the names of the response files that contain commands for the AL tool.</summary>
      <returns>The names of the response files that contain commands for the AL tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.SourceModules">
      <summary>Gets or sets the modules to be compiled into an assembly.</summary>
      <returns>The modules to be compiled into an assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.TargetType">
      <summary>Gets or sets the file format of the output file: library (code library), exe (console application), or win (Windows-based application).</summary>
      <returns>The file format of the output file: library (code library), exe (console application), or win (Windows-based application).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.TemplateFile">
      <summary>Gets or sets the assembly from which to inherit all assembly metadata, except the culture field.</summary>
      <returns>The assembly from which to inherit all assembly metadata, except the culture field.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Title">
      <summary>Gets or sets the Title field in the assembly.</summary>
      <returns>The Title field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ToolName">
      <summary>Gets the name of the tool (Al.exe).</summary>
      <returns>The name of the tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Trademark">
      <summary>Gets or sets the Trademark field in the assembly.</summary>
      <returns>The Trademark field in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Version">
      <summary>Gets or sets the version information for this assembly.</summary>
      <returns>The version information for this assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Win32Icon">
      <summary>Gets or sets the .ico file to insert in the assembly.</summary>
      <returns>The .ico file to insert in the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Win32Resource">
      <summary>Gets or sets a Win32 resource (.res file) to insert in the output file.</summary>
      <returns>The Win32 resource (.res file) to insert in the output file.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension">
      <summary>Provides the same functionality as the <see cref="T:Microsoft.Build.Utilities.Task" /> class, but derives from <see cref="T:System.MarshalByRefObject" /> so that it can be instantiated in its own application domain.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension.Log">
      <summary>Gets an instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</summary>
      <returns>The logging helper object.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignCulture">
      <summary>Implements the AssignCulture task. Use the AssignCulture element in your project file to create and execute this task. For usage and parameter information, see AssignCulture Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignCulture.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AssignCulture" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles">
      <summary>Gets a list of <see cref="P:Microsoft.Build.Tasks.AssignCulture.Files" /> with a Culture metadata entry added to each item.</summary>
      <returns>The list of <see cref="P:Microsoft.Build.Tasks.AssignCulture.Files" />, with a Culture metadata entry added to each item.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture">
      <summary>Gets a subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that have a Culture metadata entry.</summary>
      <returns>A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that have a Culture metadata entry.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture">
      <summary>Gets a subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a Culture metadata entry.</summary>
      <returns>A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a Culture metadata entry.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles">
      <summary>Gets a subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a Culture metadata entry.</summary>
      <returns>A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a Culture metadata entry.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignCulture.Execute">
      <summary>Executes the AssignCulture task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.Files">
      <summary>Gets or sets a list of files with embedded culture names to assign a culture to.</summary>
      <returns>The list of files with embedded culture names to assign a culture to.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignProjectConfiguration">
      <summary>Assigns XML project configurations to project reference task items.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AssignProjectConfiguration" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.AssignedProjects">
      <summary>Gets or sets the list of resolved project reference paths while preserving the original project reference attributes.</summary>
      <returns>The list of resolved project reference paths.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.Execute">
      <summary>Executes the AssignProjectConfiguration task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.SolutionConfigurationContents">
      <summary>Gets or sets an XML string that contains the project configuration.</summary>
      <returns>An XML string that contains the project configuration.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.UnassignedProjects">
      <summary>Gets or sets the list of project reference items that could not be resolved using the pre-resolved list of outputs.</summary>
      <returns>The list of project reference items that could not be resolved using the pre-resolved list of outputs.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignTargetPath">
      <summary>Assigns target paths to input files.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignTargetPath.#ctor">
      <summary>Creates a new instance of the <see cref="T:Microsoft.Build.Tasks.AssignTargetPath" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.AssignedFiles">
      <summary>Gets the output files that are assigned to target paths.</summary>
      <returns>The output files that are assigned to target paths.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignTargetPath.Execute">
      <summary>Executes the AssignTargetPath task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.Files">
      <summary>Gets or sets the input files to assign target paths to.</summary>
      <returns>The input files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.RootFolder">
      <summary>Gets or sets the root folder that the target file paths are relative to.</summary>
      <returns>The root folder that the target file paths are relative to.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CallTarget">
      <summary>Implements the CallTarget task. Use the CallTarget element in your project file to create and execute this task. For usage and parameter information, see CallTarget Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CallTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CallTarget" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CallTarget.Execute">
      <summary>Instructs the MSBuild engine to build one or more targets in the current project.</summary>
      <returns>true if all targets built successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.RunEachTargetSeparately">
      <summary>Gets or sets a Boolean value that indicates whether the MSBuild engine is called once per target (true) or the MSBuild engine is called once to build all targets (false).</summary>
      <returns>true if the MSBuild engine is called once per target; false if the MSBuild engine is called once to build all targets.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.TargetOutputs">
      <summary>Gets the outputs of all built targets.</summary>
      <returns>The outputs of all built targets.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.Targets">
      <summary>Gets or sets the target or targets to build.</summary>
      <returns>The target or targets to build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.UseResultsCache">
      <summary>Gets or sets a Boolean value that indicates whether the MSBuild engine will return the built targets from the cache.</summary>
      <returns>true if the MSBuild engine will return the built targets from the cache; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CombinePath">
      <summary>Combines the specified paths into a single path.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CombinePath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CombinePath" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.BasePath">
      <summary>Gets or sets the base path to combine with the other paths. Can be a relative path, absolute path, or blank.</summary>
      <returns>The base path to combine with the other paths.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.CombinedPaths">
      <summary>Gets or sets the combined path that is created by the CombinePath task.</summary>
      <returns>The combined path that is created by the CombinePath task.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CombinePath.Execute">
      <summary>Executes the CombinePath task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.Paths">
      <summary>Gets or sets a list of individual paths to combine with the <see cref="P:Microsoft.Build.Tasks.CombinePath.BasePath" /> to form the combined path. Paths can be relative or absolute.</summary>
      <returns>A list of individual paths to combine with the <see cref="P:Microsoft.Build.Tasks.CombinePath.BasePath" /> to form the combined path.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CommandLineBuilderExtension">
      <summary>Comprises extended utility methods for constructing a command line.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> class. </summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.GetQuotedText(System.String)">
      <summary>Returns a quoted string appropriate for appending to a command line.</summary>
      <returns>A string representing the new quoted string.</returns>
      <param name="unquotedText">The string to convert.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.ConvertToAbsolutePath">
      <summary>Implements the ConvertToAbsolutePath task. Use the ConvertToAbsolutePath element in your project file to create and execute this task. For usage and parameter information, see ConvertToAbsolutePath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ConvertToAbsolutePath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ConvertToAbsolutePath" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ConvertToAbsolutePath.AbsolutePaths">
      <summary>Gets or sets a list of absolute paths.</summary>
      <returns>The list of absolute paths.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ConvertToAbsolutePath.Execute">
      <summary>Executes the ConvertToAbsolutePath task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ConvertToAbsolutePath.Paths">
      <summary>Gets or sets a list of relative paths to convert to absolute paths.</summary>
      <returns>The list of relative paths to convert to absolute paths.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Copy">
      <summary>Implements the Copy task. Use the Copy element in your project file to create and execute this task. For usage and parameter information, see Copy Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Copy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Copy" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.CopiedFiles">
      <summary>Gets the items that were successfully copied.</summary>
      <returns>The items that were successfully copied.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.DestinationFiles">
      <summary>Gets or sets a list of files to copy the source files to.</summary>
      <returns>The list of files to copy the source files to.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.DestinationFolder">
      <summary>Gets or sets the directory to which you want to copy the files.</summary>
      <returns>The directory to which you want to copy the files.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Copy.Execute">
      <summary>Executes the Copy task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.SkipUnchangedFiles">
      <summary>Gets or sets a Boolean value that indicates whether the Copy task should skip the copying of files that are unchanged between the source and destination.</summary>
      <returns>true if the Copy task should skip the copying of files that are unchanged between the source and destination; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.SourceFiles">
      <summary>Gets or sets the files to copy.</summary>
      <returns>The files to copy.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles">
      <summary>Gets or sets a Boolean value that indicates whether to overwrite files even if they are marked as read only files.</summary>
      <returns>true if the Copy task should overwrite files even if they are marked as read only files; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.PreserveExistingMetadata">
      <summary>Gets or sets a Boolean value that indicates whether to apply the additional metadata only if none already exists.</summary>
      <returns>true if the CreateItem task should apply the additional metadata only if none already exists; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateManifestResourceName">
      <summary>Determines the manifest resource name to assign to a resource.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateManifestResourceName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>When overridden in a derived class, creates the manifest resource name.</summary>
      <returns>The manifest resource name.</returns>
      <param name="fileName">The name of the dependent file.</param>
      <param name="linkFileName">The name of the file specified by the Link attribute.</param>
      <param name="rootNamespaceName">The root namespace. This parameter may be a null reference (Nothing in Visual Basic).</param>
      <param name="dependentUponFileName">The file name of the parent of this dependency. This parameter may be a null reference (Nothing).</param>
      <param name="binaryStream">The binary stream contents of the file. This parameter may be a null reference (Nothing).</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.Execute">
      <summary>Runs the task.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(System.String)">
      <summary>When overridden in a derived class, indicates whether the specified file is a valid source file.</summary>
      <returns>true if the file is a valid source file; otherwise, false.</returns>
      <param name="fileName">The file name.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(System.String)">
      <summary>Creates a valid identifier for use with Visual Studio 2003.</summary>
      <returns>The identifier to use with Visual Studio 2003.</returns>
      <param name="name">The file name.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames">
      <summary>Gets the created manifest resource names.</summary>
      <returns>The created manifest resource names.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles">
      <summary>Gets or sets the dependent resource files.</summary>
      <returns>The dependent resource files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace">
      <summary>Gets or sets the root namespace to use for naming.</summary>
      <returns>The root namespace to use for naming.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory">
      <summary>Gets or sets whether the culture name should be prepended to the manifest resource name as a directory.</summary>
      <returns>true if the culture name should be prepended, false if otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames">
      <summary>Gets or sets the initial list of resource names, along with additional metadata for manifest resource names.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object, representing the resource names and metadata.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateProperty">
      <summary>Implements the CreateProperty task. Use the CreateProperty element in your project file to create and execute this task. For usage and parameter information, see CreateProperty Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateProperty" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateProperty.Execute">
      <summary>Executes the CreateProperty task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateProperty.Value">
      <summary>Gets or sets the value to copy to the new property.</summary>
      <returns>The value to copy to the new property</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateProperty.ValueSetByTask">
      <summary>Contains the same value as the <see cref="P:Microsoft.Build.Tasks.CreateProperty.Value" /> property.</summary>
      <returns>The same value as the <see cref="P:Microsoft.Build.Tasks.CreateProperty.Value" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateTemporaryVCProject">
      <summary>Creates a temporary Visual C++ project with MSBuild references replaced with file references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateTemporaryVCProject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateTemporaryVCProject" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.Configuration">
      <summary>Gets or sets the configuration of the Visual C++ project file to process.</summary>
      <returns>The configuration of the Visual C++ project file to process.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateTemporaryVCProject.Execute">
      <summary>Executes the CreateTemporaryVCProject task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.OutputProjectFile">
      <summary>Gets or sets the name of the temporary project file to create.</summary>
      <returns>The name of the temporary project file to create.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ProjectFile">
      <summary>Gets or sets the Visual C++ project file to process.</summary>
      <returns>The Visual C++ project file to process.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceAssemblies">
      <summary>Gets or sets pre-resolved outputs of MSBuild references.</summary>
      <returns>Pre-resolved outputs of MSBuild references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceGuids">
      <summary>Gets or sets an array of GUIDs of referenced MSBuild projects.</summary>
      <returns>An array of GUIDs of referenced MSBuild projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateTemporaryVCProject.ReferenceImportLibraries">
      <summary>Gets or sets pre-resolved import library (.lib) outputs of Visual C++ projects.</summary>
      <returns>Pre-resolved import library (.lib) outputs of Visual C++ projects.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName">
      <summary>Creates a Visual Basic-style manifest name from a given resource file name.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>Returns the Visual Basic-style manifest resource name that corresponds to the specified resource file.</summary>
      <returns>The manifest resource name that corresponds to the specified resource file.</returns>
      <param name="fileName">The name of the resource file from which to create the Visual Basic manifest name.</param>
      <param name="linkFileName">The name of the link file.</param>
      <param name="rootNamespace">The root namespace of the resource file, typically taken from the project file. May be null.</param>
      <param name="dependentUponFileName">The file name of the parent of the resource file (usually a .vb file). May be null.</param>
      <param name="binaryStream">File contents binary stream. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.IsSourceFile(System.String)">
      <summary>Indicates whether the specified file is a Visual Basic source file.</summary>
      <returns>true if the specified file is a Visual Basic source file; otherwise, false.</returns>
      <param name="fileName">The name of the file to examine.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Exec">
      <summary>Implements the Exec task. Use the Exec element in your project file to create and execute this task. For usage and parameter information, see Exec Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Exec" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the command line tool must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.Command">
      <summary>Gets or sets the command to run.</summary>
      <returns>The command to run.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.ExecuteTool(System.String,System.String,System.String)">
      <summary>Executes the cmd.exe tool, waits for its completion, and cleans up the batch file after execution completes.</summary>
      <returns>The exit code that the tool returns.</returns>
      <param name="pathToTool">The path to the tool to execute.</param>
      <param name="responseFileCommands">Command line arguments that should go into a temporary response file.</param>
      <param name="commandLineCommands">Command line arguments that should be passed to the tool directly.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.GenerateFullPathToTool">
      <summary>Returns the full path to the system tool cmd.exe.</summary>
      <returns>The full path to the system tool cmd.exe.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.GetWorkingDirectory">
      <summary>Returns the working directory to use for the tool process.</summary>
      <returns>The working directory to use for the tool process.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.HandleTaskExecutionErrors">
      <summary>Logs error message and handles exit code.</summary>
      <returns>true if exit code was ignored; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.IgnoreExitCode">
      <summary>Gets or sets a Boolean value that indicates whether the Exec task should ignore the exit code provided by the executed command (true) or should return false if the executed command returns a non-zero exit code (false).</summary>
      <returns>true if the Exec task should ignore the exit code provided by the executed command; false if the Exec task should return false if the executed command returns a non-zero exit code.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogPathToTool(System.String,System.String)">
      <summary>Logs the tool name and path.</summary>
      <param name="toolName">The tool name.</param>
      <param name="pathToTool">The current directory where the tool is run.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogToolCommand(System.String)">
      <summary>Logs the batch file command to be executed.</summary>
      <param name="message">Specify an empty string. This parameter is not used.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.Outputs">
      <summary>Gets or sets the output items from the task.</summary>
      <returns>The output items from the task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardErrorEncoding">
      <summary>Gets the encoding of the captured task standard error stream.</summary>
      <returns>The encoding of the captured task standard error stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardErrorLoggingImportance">
      <summary>Gets the importance to log ordinary messages with in the standard error stream.</summary>
      <returns>The importance to log ordinary messages with in the standard error stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardOutputEncoding">
      <summary>Gets the encoding of the captured task standard output stream.</summary>
      <returns>The encoding of the captured task standard output stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardOutputLoggingImportance">
      <summary>Gets the importance to log ordinary messages with in the standard out stream.</summary>
      <returns>The importance to log ordinary messages with in the standard out stream.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StdErrEncoding">
      <summary>Gets or sets the encoding of the captured task standard error stream that is visible to the project.</summary>
      <returns>The encoding of the captured task standard error stream that is visible to the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StdOutEncoding">
      <summary>Gets or sets the encoding of the captured task standard output stream that is visible to the project.</summary>
      <returns>The encoding of the captured task standard output stream that is visible to the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.ToolName">
      <summary>Gets the name of the tool (cmd.exe).</summary>
      <returns>The name of the tool (cmd.exe).</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.WorkingDirectory">
      <summary>Gets or sets the directory in which the command will run.</summary>
      <returns>The directory in which the command will run.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.CustomErrorRegularExpression">
      <summary>Gets or sets a regular expression to spot error lines in the tool output.</summary>
      <returns>A regular expression to spot error lines in the tool output.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.CustomWarningRegularExpression">
      <summary>Gets or sets a regular expression to spot warning lines in the tool output.</summary>
      <returns>A regular expression to spot warning lines in the tool output.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat">
      <summary>Gets or sets a Boolean value that indicates whether to ignore the standard error and warning format and log errors and warnings from the output as regular messages.</summary>
      <returns>true if the Exec task should ignore the standard error and warning format and should log errors and warnings as regular messages; false if the Exec task should log the errors and warnings that match the standard error and warning format.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>Logs the specified single line of text as an error or warning if the single line matched custom or standard error and warning formats or as a regular message if <see cref="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat" /> is set to true and no custom format matched.</summary>
      <param name="singleLine">Single line from the output to parse.</param>
      <param name="messageImportance">The importance to log the message with.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindAppConfigFile">
      <summary>Finds the app.config file, if any, in the provided lists.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindAppConfigFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FindAppConfigFile" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.AppConfigFile">
      <summary>Gets or sets the first matching item found in the list, if any.</summary>
      <returns>The first matching item found in the list, or null if no matching item is found.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindAppConfigFile.Execute">
      <summary>Finds the app config file.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.PrimaryList">
      <summary>Gets or sets the primary list to search through.</summary>
      <returns>The primary list to search through.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.SecondaryList">
      <summary>Gets or sets the secondary list to search through.</summary>
      <returns>The secondary list to search through.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath">
      <summary>Gets or sets the value to add as <see cref="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath" /> metadata.</summary>
      <returns>The <see cref="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath" /> metadata.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindInList">
      <summary>In a specified list, finds an item that has the matching itemspec.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindInList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FindInList" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.CaseSensitive">
      <summary>Gets or sets a Boolean value that indicates whether to match case sensitively.</summary>
      <returns>trueFindInList task should match case sensitively; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindInList.Execute">
      <summary>Executes the FindInList task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.FindLastMatch">
      <summary>Gets or sets a Boolean value that indicates whether to return the last match (true) or to return the first match (false).</summary>
      <returns>true if the FindInList task should return the last match; false if the FindInList task should return the first match.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.ItemFound">
      <summary>Gets or sets the first matching item found in the list, if any.</summary>
      <returns>The first matching item found in the list.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.ItemSpecToFind">
      <summary>Gets or sets the itemspec to search for.</summary>
      <returns>The itemspec to search for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.List">
      <summary>Gets or sets the list in which to search for the itemspec.</summary>
      <returns>The list in which to search for the itemspec.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.MatchFileNameOnly">
      <summary>Gets or sets a Boolean value that indicates whether to match against just the file name part of the itemspec or to match against the whole itemspec.</summary>
      <returns>true if the FindInList task should match against just the file name part of the itemspec; false if the FindInList task should match against the whole itemspec.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.UpdateToAbsolutePaths">
      <summary>Gets or sets a Boolean value that indicates whether the paths of the output items should be updated to be absolute.</summary>
      <returns>true if the paths of the output items should be updated to be absolute; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FormatVersion">
      <summary>Appends the revision number to the version number.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatVersion.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.FormatVersion" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatVersion.Execute">
      <summary>Executes the FormatVersion task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.FormatType">
      <summary>Gets or sets the format type.</summary>
      <returns>The format type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.OutputVersion">
      <summary>Gets or sets the output version that includes the revision number.</summary>
      <returns>The output version that includes the revision number.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.Revision">
      <summary>Gets or sets the revision to append to the version.</summary>
      <returns>The revision to append to the version.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.Version">
      <summary>Gets or sets the version number string to format.</summary>
      <returns>The version number string to format.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser">
      <summary>Gets or sets whether the application is hosted in a browser (as are WPF Web Browser Applications).</summary>
      <returns>A Boolean value that indicates whether the application being deployed will be hosted in a browser (true), or not (false). true only applies to WPF Web Browser Applications.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product">
      <summary>Specifies the ProductName property in the project file.</summary>
      <returns>A string value that corresponds to the ProductName property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher">
      <summary>Specifies the PublisherName property in the project file.</summary>
      <returns>A string value that corresponds to the PublisherName property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl">
      <summary>Specifies the SupportUrl property in the project file.</summary>
      <returns>A string value that corresponds to the SupportUrl property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkVersion"></member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust">
      <summary>Specifies whether the <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />, <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" />, and <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> properties are written to the application manifest.</summary>
      <returns>A Boolean value that indicates whether the <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />, <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" />, and <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> properties are written to the application manifest (true). If the value is false, these properties are ignored.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateBootstrapper">
      <summary>Implements the GenerateBootstrapper task. Use the GenerateBootstrapper element in your project file to create and execute this task. For usage and parameter information, see GenerateBootstrapper Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateBootstrapper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateBootstrapper" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationFile">
      <summary>Gets or sets the file the bootstrapper will use to begin the installation of the application after all prerequisites have been installed.</summary>
      <returns>The file the bootstrapper will use to begin the installation of the application after all prerequisites have been installed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationName">
      <summary>Gets or sets the name of the application that the bootstrapper will install.</summary>
      <returns>The name of the application that the bootstrapper will install.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationUrl">
      <summary>Gets or sets the Web location that is hosting the application’s installer.</summary>
      <returns>The Web location that is hosting the application’s installer.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperComponentFiles">
      <summary>Gets or sets the built location of bootstrapper package files.</summary>
      <returns>The built location of bootstrapper package files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperItems">
      <summary>Gets or sets the products to build into the bootstrapper.</summary>
      <returns>The products to build into the bootstrapper.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperKeyFile">
      <summary>Gets or sets the built location of setup.exe.</summary>
      <returns>The built location of setup.exe.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsLocation">
      <summary>Gets or sets a location for the bootstrapper to look for installation prerequisites to install.</summary>
      <returns>The location for the bootstrapper to look for installation prerequisites to install.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsUrl">
      <summary>Gets or sets the URL containing the installation prerequisites.</summary>
      <returns>The URL containing the installation prerequisites.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.CopyComponents">
      <summary>Gets or sets a Boolean value that indicates whether the bootstrapper copies all output files to the path specified in the <see cref="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath" /> property. </summary>
      <returns>true if the bootstrapper should copy all output files to the path specified in the <see cref="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath" /> property; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Culture">
      <summary>Gets or sets the culture to use for the bootstrapper UI and installation prerequisites. </summary>
      <returns>The culture to use for the bootstrapper UI and installation prerequisites.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateBootstrapper.Execute">
      <summary>Executes the GenerateBootstrapper task.</summary>
      <returns>true if the task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.FallbackCulture">
      <summary>Gets or sets the secondary culture to use for the bootstraper UI and installation prerequisites.</summary>
      <returns>The secondary culture to use for the bootstraper UI and installation prerequisites.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath">
      <summary>Gets or sets the location to copy setup.exe and all package files.</summary>
      <returns>The location to copy setup.exe and all package files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Path">
      <summary>Gets or sets the location of all available prerequisite packages.</summary>
      <returns>The location of all available prerequisite packages.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.SupportUrl">
      <summary>Gets or sets the URL to provide should the bootstrapper installation fail.</summary>
      <returns>The URL to provide should the bootstrapper installation fail.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Validate">
      <summary>Gets or sets a Boolean value that indicates whether the bootstrapper performs XSD validation on the specified input bootstrapper items.</summary>
      <returns>true if the bootstrapper performs XSD validation on the specified input bootstrapper items; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationRequiresElevation">
      <summary>Gets or sets whether a component runs with elevated permissions when it is installed on a target computer.</summary>
      <returns>Returns True if the installed component runs with elevated permissions; otherwise False.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateResource">
      <summary>Implements the GenerateResource task. Use the GenerateResource element in your project file to create and execute this task. For usage and parameter information, see GenerateResource Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateResource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GenerateResource" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateResource.Execute">
      <summary>Executes the GenerateResource task.</summary>
      <returns>true if the GenerateResource task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.FilesWritten">
      <summary>Gets or sets the names of all files written to disk including the cache file, if present.</summary>
      <returns>The names of all files written to disk.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.NeverLockTypeAssemblies">
      <summary>Gets or sets a Boolean value that specifies whether to create a new <see cref="T:System.AppDomain" /> to evaluate the resources (.resx) files (true) or to create a new <see cref="T:System.AppDomain" /> only when the resources files reference a user's assembly (false).</summary>
      <returns>true if the GenerateResource task should create a new <see cref="T:System.AppDomain" /> to evaluate the resources (.resx) files; false if the GenerateResource task should create a new <see cref="T:System.AppDomain" /> only when the resources (.resx) files reference a user's assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.OutputResources">
      <summary>Gets or sets the name of the generated files, such as .resources files. </summary>
      <returns>The name of the generated files, such as .resources files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.PublicClass">
      <summary>Gets or sets a Boolean value that indicates whether the GenerateResource task should create a strongly typed resource class as a public class.</summary>
      <returns>true if the GenerateResource task should create a strongly typed resource class as a public class; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.References">
      <summary>Gets or sets the references to load types in .resx files from.</summary>
      <returns>The references to load types in .resx files from.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.Sources">
      <summary>Gets or sets the items to convert.</summary>
      <returns>The items to convert.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StateFile">
      <summary>Gets or sets the path to an optional cache file that is used to speed up dependency checking of links in .resx input files.</summary>
      <returns>The path to an optional cache file that is used to speed up dependency checking of links in .resx input files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedClassName">
      <summary>Gets or sets the class name for the strongly typed resource class.</summary>
      <returns>The class name for the strongly typed resource class.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedFileName">
      <summary>Gets or sets the filename for the source file.</summary>
      <returns>The filename for the source file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedLanguage">
      <summary>Gets or sets the language to use when generating the class source for the strongly typed resource.</summary>
      <returns>The language to use when generating the class source for the strongly typed resource.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedNamespace">
      <summary>Gets or sets the namespace to use for the generated class source for the strongly typed resource.</summary>
      <returns>The namespace to use for the generated class source for the strongly typed resource.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.UseSourcePath">
      <summary>Gets or sets a Boolean value that indicates whether the input file's directory is to be used for resolving relative file paths.</summary>
      <returns>true if the input file's directory is to be used for resolving relative file paths; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.AdditionalInputs">
      <summary>Gets or sets the additional inputs for the dependency checking that the GenerateResource task performs.</summary>
      <returns>The additional inputs for the dependency checking that the GenerateResource task performs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedManifestPrefix">
      <summary>Gets or sets the resource namespace or manifest prefix to use in the generated class source for the strongly typed resource.</summary>
      <returns>The resource namespace or manifest prefix to use in the generated class source for the strongly typed resource.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.ApplicationDependencies">
      <summary>Gets or sets the dependent assemblies.</summary>
      <returns>The dependent assemblies.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetAssemblyIdentity">
      <summary>Implements the GetAssemblyIdentity task. Use the GetAssemblyIdentity element in your project file to create and execute this task. For usage and parameter information, see GetAssemblyIdentity Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.GetAssemblyIdentity" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetAssemblyIdentity.Assemblies">
      <summary>Gets or sets the retrieved assembly identities.</summary>
      <returns>The retrieved assembly identities.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetAssemblyIdentity.AssemblyFiles">
      <summary>Gets or sets the files to retrieve identities from.</summary>
      <returns>The files to retrieve identities from.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.Execute">
      <summary>Executes the GetAssemblyIdentity task.</summary>
      <returns>true if the GetAssemblyIdentity task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion11Path">
      <summary>Gets or sets the path of the folder that contains the .NET Framework 1.1 assemblies.</summary>
      <returns>The path of the folder that contains the .NET Framework 1.1 assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion20Path">
      <summary>Gets or sets the path of the folder that contains the .NET Framework 2.0 assemblies.</summary>
      <returns>The path of the folder that contains the .NET Framework 2.0 assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion30Path">
      <summary>Gets or sets the path of the folder that contains the .NET Framework 3.0 assemblies.</summary>
      <returns>The path of the folder that contains the .NET Framework 3.0 assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion35Path">
      <summary>Gets or sets the path of the folder that contains the .NET Framework 3.5 assemblies.</summary>
      <returns>The path of the folder that contains the .NET Framework 3.5 assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion20Path">
      <summary>Gets or sets the path to the .NET Framework 2.0 SDK.</summary>
      <returns>The path to the .NET Framework 2.0 SDK.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion35Path">
      <summary>Gets or sets the path to the .NET Framework 3.5 SDK.</summary>
      <returns>The path to the .NET Framework 3.5 SDK.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.IFixedTypeInfo">
      <summary>Provides a substitute for <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> by modifying the definitions of <see cref="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeOfImplType(System.Int32,System.IntPtr@)" /> and <see cref="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeInfo(System.IntPtr,Microsoft.Build.Tasks.IFixedTypeInfo@)" />.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)" />.</summary>
      <param name="memid"></param>
      <param name="invKind"></param>
      <param name="ppv"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)" />.</summary>
      <param name="pUnkOuter"></param>
      <param name="riid"></param>
      <param name="ppvObj"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)" />.</summary>
      <param name="ppTLB"></param>
      <param name="pIndex"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)" />.</summary>
      <param name="memid"></param>
      <param name="invKind"></param>
      <param name="pBstrDllName"></param>
      <param name="pBstrName"></param>
      <param name="pwOrdinal"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />.</summary>
      <param name="index"></param>
      <param name="strName"></param>
      <param name="strDocString"></param>
      <param name="dwHelpContext"></param>
      <param name="strHelpFile"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="index"></param>
      <param name="ppFuncDesc"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])" />.</summary>
      <param name="rgszNames"></param>
      <param name="cNames"></param>
      <param name="pMemId"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)" />.</summary>
      <param name="index"></param>
      <param name="pImplTypeFlags"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetMops(System.Int32,System.String@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)" />.</summary>
      <param name="memid"></param>
      <param name="pBstrMops"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)" />.</summary>
      <param name="memid"></param>
      <param name="rgBstrNames"></param>
      <param name="cMaxNames"></param>
      <param name="pcNames"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeInfo(System.IntPtr,Microsoft.Build.Tasks.IFixedTypeInfo@)">
      <summary>Retrieves the referenced type descriptions if a type description references other type descriptions.</summary>
      <param name="hRef">A handle to the referenced type description to return.</param>
      <param name="ppTI">When this method returns, contains the referenced type description. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeOfImplType(System.Int32,System.IntPtr@)">
      <summary>Retrieves the type description of the implemented interface types if a type description describes a COM class.</summary>
      <param name="index">The index of the implemented type whose handle is returned.</param>
      <param name="href">When this method returns, contains a reference to a handle for the implemented interface. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeAttr(System.IntPtr@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />.</summary>
      <param name="ppTypeAttr"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)" />.</summary>
      <param name="ppTComp"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</summary>
      <param name="index"></param>
      <param name="ppVarDesc"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)" />.</summary>
      <param name="pvInstance"></param>
      <param name="memid"></param>
      <param name="wFlags"></param>
      <param name="pDispParams"></param>
      <param name="pVarResult"></param>
      <param name="pExcepInfo"></param>
      <param name="puArgErr"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseFuncDesc(System.IntPtr)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseFuncDesc(System.IntPtr)" />.</summary>
      <param name="pFuncDesc"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseTypeAttr(System.IntPtr)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseTypeAttr(System.IntPtr)" />.</summary>
      <param name="pTypeAttr"></param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseVarDesc(System.IntPtr)">
      <summary>For a description of this member, see <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseVarDesc(System.IntPtr)" />.</summary>
      <param name="pVarDesc"></param>
    </member>
    <member name="T:Microsoft.Build.Tasks.LC">
      <summary>Implements the LC task. Use the LC element in your project file to create and execute this task. For usage and parameter information, see LC Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.LC" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the license compiler tool (lc.exe) must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.GenerateFullPathToTool">
      <summary>Returns the full file path of the license compiler tool (lc.exe).</summary>
      <returns>The full file path of the license compiler tool, or null if the license compiler tool file is not found.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.LicenseTarget">
      <summary>Gets or sets the executable for which the .licenses files are generated.</summary>
      <returns>The executable for which the .licenses files are generated.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.NoLogo">
      <summary>Gets or sets a Boolean value that specifies whether to suppress the Microsoft startup banner display.</summary>
      <returns>true if the Microsoft startup banner display is suppressed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.OutputDirectory">
      <summary>Gets or sets the directory in which to place the output .licenses files.</summary>
      <returns>The directory in which to place the output .licenses files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.OutputLicense">
      <summary>Gets or sets the name of the .licenses file.</summary>
      <returns>The name of the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.ReferencedAssemblies">
      <summary>Gets or sets the referenced components to load when generating the .licenses file.</summary>
      <returns>The referenced components to load when generating the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.Sources">
      <summary>Gets or sets the items that contain licensed components to include in the .licenses file.</summary>
      <returns>The items that contain licensed components to include in the .licenses file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.ToolName">
      <summary>Gets the name of the license compiler tool.</summary>
      <returns>The name of the license compiler tool.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.MakeDir">
      <summary>Implements the MakeDir task. Use the MakeDir element in your project file to create and execute this task. For usage and parameter information, see MakeDir Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MakeDir.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.MakeDir" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.MakeDir.Directories">
      <summary>Gets or sets the set of directories to create.</summary>
      <returns>The set of directories to create.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MakeDir.DirectoriesCreated">
      <summary>Gets the directories that the MakeDir task created. </summary>
      <returns>The directories that the MakeDir task created.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.MakeDir.Execute">
      <summary>Executes the MakeDir task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.NoWin32Manifest">
      <summary>Gets or sets a Boolean value that specifies whether an external UAC manifest is generated for the application.</summary>
      <returns>true if an external UAC manifest is generated for the application; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.UseAlternateCommandLineToolToExecute">
      <summary>If an alternate tool name or tool path was specified in the project file, then that tool is used rather than the host compiler for integrated development environment (IDE) builds.</summary>
      <returns>false if the host compiler should be used; otherwise, true.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Win32Manifest">
      <summary>Gets or sets the Win32 manifest.</summary>
      <returns>The Win32 manifest.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Message">
      <summary>Implements the Message task. Use the Message element in your project file to create and execute this task. For usage and parameter information, see Message Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Message.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Message" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Message.Execute">
      <summary>Executes the Message task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.Importance">
      <summary>Gets or sets the importance of the message.</summary>
      <returns>The importance of the message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.Text">
      <summary>Gets or sets the error text to log.</summary>
      <returns>The error text to log.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.MSBuild">
      <summary>Implements the MSBuild task. Use the MSBuild element in your project file to create and execute this task. For usage and parameter information, see MSBuild Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MSBuild.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.MSBuild" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MSBuild.Execute">
      <summary>Instructs the MSBuild engine to build one or more project files whose locations are specified by the <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> property.</summary>
      <returns>true if all projects build successfully; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Projects">
      <summary>Gets or sets the project files to build.</summary>
      <returns>The project files to build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Properties">
      <summary>Gets or sets a semicolon-delimited list of property name/value pairs to apply as global properties to the child project. </summary>
      <returns>A semicolon-delimited list of property name/value pairs to apply as global properties to the child project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RebaseOutputs">
      <summary>Gets or sets a Boolean value that specifies whether the relative paths of target output items from the built projects have their paths adjusted to be relative to the calling project. </summary>
      <returns>true if the relative paths of target output items from the built projects have their paths adjusted to be relative to the calling project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RunEachTargetSeparately">
      <summary>Gets or sets a Boolean value that specifies whether the MSBuild task invokes each target in the list passed to MSBuild one at a time, instead of at the same time.</summary>
      <returns>true if the MSBuild task invokes each target in the list passed to MSBuild one at a time; false if the MSBuild task invokes all targets in the list at the same time.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.StopOnFirstFailure">
      <summary>Gets or sets a Boolean value that specifies whether the task should stop building the remaining projects as soon as any one of them may not work.</summary>
      <returns>true if the task should stop building the remaining projects as soon as any one of them may not work; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.TargetOutputs">
      <summary>Returns the outputs of the built targets from all the project files. Only the outputs from the targets that were specified are returned, not any outputs that may exist on targets that those targets depend on.</summary>
      <returns>The outputs of the built targets from all the project files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Targets">
      <summary>Gets or sets the target or targets to build in the project files. Use a semicolon to separate a list of target names. </summary>
      <returns>The target or targets to build in the project files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.BuildInParallel">
      <summary>Gets or sets a Boolean value that specifies whether the projects specified in the <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> property are built in parallel, if possible. </summary>
      <returns>true if the projects specified in the <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> property are built in parallel if possible; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.SkipNonexistentProjects">
      <summary>Gets or sets a Boolean value that specifies whether project files that do not exist on the disk will be skipped.</summary>
      <returns>true if project files that do not exist on the disk will be skipped; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.TargetAndPropertyListSeparators">
      <summary>Gets or sets the escape characters to be unescaped from the specified <see cref="P:Microsoft.Build.Tasks.MSBuild.Properties" /> and <see cref="P:Microsoft.Build.Tasks.MSBuild.Targets" />.</summary>
      <returns>The escape characters to be unescaped from the specified <see cref="P:Microsoft.Build.Tasks.MSBuild.Properties" /> and <see cref="P:Microsoft.Build.Tasks.MSBuild.Targets" />.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.ToolsVersion">
      <summary>Gets or sets a target .NET Framework version to build the project with, which enables an MSBuild task to build a project that targets a different version of the .NET Framework than the one specified in the project. Valid values are <paramref name="2.0" />, <paramref name="3.0" /> and <paramref name="3.5" />. </summary>
      <returns>The target .NET Framework version to build the project with.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.UnloadProjectsOnCompletion">
      <summary>Gets or sets a Boolean value that specifies whether the project will be unloaded once the operation is completed.</summary>
      <returns>true if the project will be unloaded once the operation is completed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.UseResultsCache">
      <summary>Gets or sets a Boolean value that indicates whether the MSBuild engine will return the built targets from the cache.</summary>
      <returns>true if the MSBuild engine will return the built targets from the cache; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RemoveDuplicates">
      <summary>Implements the RemoveDuplicates task. Use the RemoveDuplicates element in your project file to create and execute this task. For usage and parameter information, see RemoveDuplicates Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDuplicates.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.RemoveDuplicates" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDuplicates.Execute">
      <summary>Executes the RemoveDuplicates task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDuplicates.Filtered">
      <summary>Gets or sets an item collection with all duplicate items removed.</summary>
      <returns>An item collection with all duplicate items removed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDuplicates.Inputs">
      <summary>Gets or sets the items to remove duplicate items from.</summary>
      <returns>The items to remove duplicate items from.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveAssemblyReference">
      <summary>Implements the ResolveAssemblyReference task. Use the ResolveAssemblyReference element in your project file to create and execute this task. For usage and parameter information, see ResolveAssemblyReference Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveAssemblyReference" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedAssemblyExtensions">
      <summary>Gets or sets the assembly extensions that will be considered during references resolution.</summary>
      <returns>The assembly extensions that will be considered during references resolution.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile">
      <summary>Gets or sets the App.Config file path.</summary>
      <returns>The App.Config file path.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.Assemblies">
      <summary>Gets or sets the assembly names to resolve into full paths and to find dependencies for. </summary>
      <returns>The assembly names to resolve into full paths and to find dependencies for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyFiles">
      <summary>Gets or sets a list of fully qualified assembly paths to find dependencies for.</summary>
      <returns>The list of fully qualified assembly paths to find dependencies for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify">
      <summary>Gets or sets a Boolean value that specifies whether the resulting dependency graph is automatically treated as if there were an App.Config file passed in to the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile" /> property.</summary>
      <returns>true if the resulting dependency graph is automatically treated as if there were an App.Config file passed in to the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.CandidateAssemblyFiles">
      <summary>Gets or sets a list of assemblies, which must be absolute file names or project-relative file names, to use for the search and resolution process.</summary>
      <returns>The list of assemblies to use for the search and resolution process.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalFiles">
      <summary>Returns all files in the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles" />, and <see cref="T:Microsoft.Build.Tasks.ResolveAssemblyReference" /> properties that have the CopyLocal item metadata with a value of true.</summary>
      <returns>All files in the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles" />, <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles" />, and <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ScatterFiles" /> properties that have the CopyLocal item metadata with a value of true.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.Execute">
      <summary>Executes the ResolveAssemblyReference task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FilesWritten">
      <summary>Gets or sets the items written to disk.</summary>
      <returns>The items written to disk.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependencies">
      <summary>Gets or sets a Boolean value that specifies whether dependencies will be found (true) or only primary references will be found (false). </summary>
      <returns>true if dependencies will be found; false if only primary references will be found. </returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindRelatedFiles">
      <summary>Gets or sets a Boolean value that specifies whether related files such as .pdb files and .xml files will be found.</summary>
      <returns>true if related files such as .pdb files and .xml files will be found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindSatellites">
      <summary>Gets or sets a Boolean value that specifies whether satellite assemblies will be found.</summary>
      <returns>true if satellite assemblies will be found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindSerializationAssemblies">
      <summary>Gets or sets a Boolean value that specifies whether the serialization assemblies will be found.</summary>
      <returns>true if the serialization assemblies will be found; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblyTables">
      <summary>Gets or sets a list of XML files that contain assemblies that are expected to be installed on the target machine.</summary>
      <returns>A list of XML files that contain assemblies that are expected to be installed on the target machine.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles">
      <summary>Gets related files, such as .xml and .pdb files with the same base name as a reference.</summary>
      <returns>The related files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles">
      <summary>Gets the nth order paths to dependencies.</summary>
      <returns>The nth order paths to dependencies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles">
      <summary>Gets a list of all primary references resolved to full paths.</summary>
      <returns>The list of all primary references resolved to full paths.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles">
      <summary>Gets any satellite files found.</summary>
      <returns>Any satellite files found.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ScatterFiles">
      <summary>Gets the scatter files associated with one of the given assemblies.</summary>
      <returns>The scatter files associated with one of the given assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SearchPaths">
      <summary>Specifies the directories or special locations that are searched to find the files on disk that represent the assemblies.</summary>
      <returns>The directories or special locations that are searched to find the files on disk that represent the assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SerializationAssemblyFiles">
      <summary>Gets the serialization assemblies.</summary>
      <returns>The serialization assemblies.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.Silent">
      <summary>Gets or sets a Boolean value that specifies whether no messages are logged. </summary>
      <returns>true if no messages are logged; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.StateFile">
      <summary>Gets or sets a file name that indicates where to save the intermediate build state for this task.</summary>
      <returns>The file name that indicates where to save the intermediate build state for this task.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SuggestedRedirects">
      <summary>Gets one item for every distinct conflicting assembly identity, regardless of the value of the <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify" /> property.</summary>
      <returns>The items that correspond to distinct conflicting assembly identities.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories">
      <summary>Gets or sets the path to the target framework directory. </summary>
      <returns>The path to the target framework directory.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetProcessorArchitecture">
      <summary>Gets or sets the preferred target processor architecture used for resolving Global Assembly Cache (GAC) references, which can have a value of x86, IA64, or AMD64.</summary>
      <returns>The preferred target processor architecture used for resolving Global Assembly Cache (GAC) references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedRelatedFileExtensions">
      <summary>Gets or sets the extensions that will be considered when searching for related files.</summary>
      <returns>The extensions that will be considered when searching for related files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblyTables">
      <summary>Gets or sets a Boolean value that specifies whether the ResolveAssemblyReference task should ignore additional installed assembly tables found in the RedistList directory underneath the provided <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories" /> (true) or should search for and use these installed assembly tables (false).</summary>
      <returns>true if the task should ignore the additional installed assembly tables; false if the task should search for and use the additional installed assembly tables.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkVersion">
      <summary>Gets or sets the project target framework version used for reference filtering.</summary>
      <returns>The project target framework version used for reference filtering.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveNativeReference">
      <summary>Implements the ResolveNativeReference task. Use the ResolveNativeReference element in your project file to create and execute this task. For usage and parameter information, see ResolveNativeReference Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveNativeReference" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.AdditionalSearchPaths">
      <summary>Gets or sets the search paths for resolving assembly identities of native references.</summary>
      <returns>The search paths for resolving assembly identities of native references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedComComponents">
      <summary>Gets or sets the COM components of the native assembly.</summary>
      <returns>The COM components of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseEtcFiles">
      <summary>Gets or sets the loose Etc files listed in the native manifest.</summary>
      <returns>The loose Etc files listed in the native manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseTlbFiles">
      <summary>Gets or sets the loose .tlb files of the native assembly.</summary>
      <returns>The loose .tlb files of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedPrerequisiteAssemblies">
      <summary>Gets or sets the assemblies that must be present before the manifest can be used.</summary>
      <returns>The assemblies that must be present before the manifest can be used.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedTypeLibraries">
      <summary>Gets or sets the type libraries of the native assembly.</summary>
      <returns>The type libraries of the native assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainingReferenceFiles">
      <summary>Gets or sets the reference files.</summary>
      <returns>The reference files.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.Execute">
      <summary>Executes the ResolveNativeReference task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.NativeReferences">
      <summary>Gets or sets the Win32 native assembly references.</summary>
      <returns>The Win32 native assembly references.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveVCProjectOutput">
      <summary>Determines the output files for Visual C++ project references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveVCProjectOutput.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.ResolveVCProjectOutput" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.Configuration">
      <summary>Gets or sets the configuration to look up for the Visual C++ project when using the Visual C++ project engine object model.</summary>
      <returns>The configuration to look up for the Visual C++ project.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveVCProjectOutput.Execute">
      <summary>Executes the ResolveVCProjectOutput task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.Override">
      <summary>Gets or sets the path of the override stylesheet that the ResolveVCProjectOutput task uses to change the directory of the Visual C++ built project.</summary>
      <returns>The path of the override stylesheet.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ProjectReferences">
      <summary>Gets or sets Visual C++ project references.</summary>
      <returns>Visual C++ project references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ResolvedImportLibraryPaths">
      <summary>Gets or sets resolved .LIB file paths for native Visual C++ projects and preserves the original project reference attributes.</summary>
      <returns>The resolved .LIB file paths for native Visual C++ projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.ResolvedOutputPaths">
      <summary>Gets or sets resolved reference paths for managed Visual C++ projects. Preserves the original project reference attributes.</summary>
      <returns>The resolved reference paths for managed Visual C++ projects.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveVCProjectOutput.SolutionFile">
      <summary>Gets or sets the path of the solution file that is used to set the solution macros for VCBuild.</summary>
      <returns>The path of the solution file.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.SGen">
      <summary>Implements the SGen task. Use the SGen element in your project file to create and execute this task. For usage and parameter information, see SGen Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.SGen" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.BuildAssemblyName">
      <summary>Gets or sets the assembly to generate serialization code for.</summary>
      <returns>The assembly to generate serialization code for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.BuildAssemblyPath">
      <summary>Gets or sets the path to the assembly to generate serialization code for.</summary>
      <returns>The path to the assembly to generate serialization code for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.DelaySign">
      <summary>Gets or sets a Boolean value that specifies whether the SGen task places the public key in the assembly (true) or fully signs the assembly (false).</summary>
      <returns>true if the SGen task places the public key in the assembly; false if the SGen task fully signs the assembly.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.GenerateCommandLineCommands">
      <summary>Gets the switches and other information that the command line tool must run directly from the command line and not from a response file.</summary>
      <returns>A string containing the switches and other information that the command line tool must run directly from the command line and not from a response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.GenerateFullPathToTool">
      <summary>Gets the full file path of the SGen tool.</summary>
      <returns>The full file path of the SGen tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.KeyContainer">
      <summary>Gets or sets a container that holds a key pair. </summary>
      <returns>The container that holds a key pair.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.KeyFile">
      <summary>Gets or sets a key pair or a public key to use to sign an assembly. </summary>
      <returns>A key pair or a public key to use to sign an assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.References">
      <summary>Gets or sets the assemblies that are referenced by the types requiring XML serialization.</summary>
      <returns>The assemblies that are referenced by the types requiring XML serialization.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.SerializationAssembly">
      <summary>Gets or sets the generated serialization assembly.</summary>
      <returns>The generated serialization assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.SerializationAssemblyName">
      <summary>Gets the name of the generated serialization assembly.</summary>
      <returns>The name of the generated serialization assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.ShouldGenerateSerializer">
      <summary>Gets or sets a Boolean value that specifies whether the SGen task should generate a serialization assembly.</summary>
      <returns>true if the SGen task should generate a serialization assembly; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.SkipTaskExecution">
      <summary>Indicates whether task execution should be skipped.</summary>
      <returns>true if task execution should be skipped; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.ToolName">
      <summary>Gets the name of the tool executable file (sgen.exe).</summary>
      <returns>The name of the tool executable file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.UseProxyTypes">
      <summary>Gets or sets a Boolean value that specifies whether the SGen task generates serialization code only for the XML Web service proxy types.</summary>
      <returns>true if the SGen task generates serialization code only for the XML Web service proxy types; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension">
      <summary>Enables logging of various messages. Also, enables loading and formatting of resources.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.TaskLoggingHelperExtension.#ctor(Microsoft.Build.Framework.ITask,System.Resources.ResourceManager,System.Resources.ResourceManager,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class with the task instance, primary resources, shared resources, and a Help keyword prefix.</summary>
      <param name="taskInstance">A task containing an instance of the <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class.</param>
      <param name="primaryResources">UI and string resources.</param>
      <param name="sharedResources">Shared UI and string resources.</param>
      <param name="helpKeywordPrefix">The prefix for composing Help keywords.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.TaskLoggingHelperExtension.FormatResourceString(System.String,System.Object[])">
      <summary>Loads the specified resource string and optionally formats it using the given arguments. The current thread's culture is used for formatting.</summary>
      <returns>The formatted string.</returns>
      <param name="resourceName">The name of the string resource to load.</param>
      <param name="args">Optional arguments for formatting the loaded string, or null.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskSharedResources">
      <summary>Gets or sets the shared UI and string resources.</summary>
      <returns>The shared UI and string resources.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ToolTaskExtension">
      <summary>Comprises extended utility methods for constructing a task that wraps a command line tool.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> with the switches and other information that the command line tool must run from the command line and not from a response file.</summary>
      <param name="commandLine">The <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> to fill.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> with the switches and other information that the command line tool can run from a response file.</summary>
      <param name="commandLine">The <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> to fill.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag">
      <summary>Gets the collection of parameters used by the derived task class.</summary>
      <returns>The collection of parameters used by the derived task class.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateCommandLineCommands">
      <summary>Gets the switches and other information that the command line tool must run directly from the command line and not from a response file.</summary>
      <returns>A string containing the switches and other information that the command line tool must run directly from the command line and not from a response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateResponseFileCommands">
      <summary>Gets the switch used by the command line tool to specify the response file.</summary>
      <returns>The switch used by the command line tool to specify the response file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)">
      <summary>Gets the value of the specified Boolean parameter.</summary>
      <returns>The parameter value.</returns>
      <param name="parameterName">The name of the parameter to return.</param>
      <param name="defaultValue">The value to return if <paramref name="parameterName" /> does not exist in the <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)">
      <summary>Gets the value of the specified integer parameter.</summary>
      <returns>The parameter value.</returns>
      <param name="parameterName">The name of the parameter to return.</param>
      <param name="defaultValue">The value to return if <paramref name="parameterName" /> does not exist in the <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" />.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.Log">
      <summary>Gets an instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</summary>
      <returns>An instance of a <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> class containing task logging methods.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.HasLoggedErrors">
      <summary>Returns whether this ToolTask has logged any errors.</summary>
      <returns>true if the ToolTask logged errors, false if otherwise.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.UnregisterAssembly">
      <summary>Implements the UnregisterAssembly task. Use the UnregisterAssembly element in your project file to create and execute this task. For usage and parameter information, see UnregisterAssembly Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.UnregisterAssembly.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.UnregisterAssembly" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.Assemblies">
      <summary>Gets or sets the assemblies to be unregistered.</summary>
      <returns>The assemblies to be unregistered.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.AssemblyListFile">
      <summary>Gets or sets information about the state between the RegisterAssembly task and the UnregisterAssembly task that the UnregisterAssembly task uses to avoid unregistering an assembly that failed to register in the RegisterAssembly task.</summary>
      <returns>Information about the state between the RegisterAssembly task and the UnregisterAssembly task.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.UnregisterAssembly.Execute">
      <summary>Executes the UnregisterAssembly task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.TypeLibFiles">
      <summary>Gets or sets a Boolean value that specifies whether to unregister the specified type library from the specified assembly.</summary>
      <returns>true if the UnregisterAssembly task should unregister the specified type library from the specified assembly; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Vbc">
      <summary>Implements the Vbc task. Use the Vbc element in your project file to create and execute this task. For usage and parameter information, see Vbc Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Vbc" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Fills the specified <paramref name="commandLine" /> parameter with switches and other information that can go into a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.BaseAddress">
      <summary>Gets or sets the base address of the DLL.</summary>
      <returns>The base address of the DLL.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.CallHostObjectToExecute">
      <summary>Compiles the project through the host object.</summary>
      <returns>true if compilation succeeded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.DisabledWarnings">
      <summary>Gets or sets one or more warnings to suppress that are specified by the numeric part of the warning identifier.</summary>
      <returns>The warnings to suppress that are specified by the numeric part of the warning identifier.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.DocumentationFile">
      <summary>Turns on documentation comments processing and gets or sets the output documentation XML file.</summary>
      <returns>The output documentation XML file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ErrorReport">
      <summary>Gets or sets a string value that specifies how the task will report internal compiler errors.</summary>
      <returns>A string value that specifies how the task will report internal compiler errors.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.GenerateDocumentation">
      <summary>Gets or sets a Boolean value that specifies whether to process documentation comments to an XML file.</summary>
      <returns>true if the Vbc task processes documentation comments to a XML file; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.GenerateFullPathToTool">
      <summary>Returns the full file path of the tool.</summary>
      <returns>The full file path of the tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.Imports">
      <summary>Gets or sets the item collections to import namespaces from.</summary>
      <returns>The item collections to import namespaces from.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.InitializeHostObject">
      <summary>Returns a host object initialization status value that indicates what the next action should be.</summary>
      <returns>A host object initialization status value that indicates what the next action should be.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoStandardLib">
      <summary>Gets or sets a Boolean value that specifies whether the compiler should not reference the standard libraries.</summary>
      <returns>true if the compiler should not reference the standard libraries; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoWarnings">
      <summary>Gets or sets a Boolean value that specifies whether the task will suppress all warnings.</summary>
      <returns>true if the task will suppress all warnings; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionCompare">
      <summary>Gets or sets a string value that specifies how string comparisons are made.</summary>
      <returns>A string value that specifies how string comparisons are made.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionExplicit">
      <summary>Gets or sets a Boolean value that specifies whether explicit declaration of variables is required.</summary>
      <returns>true if explicit declaration of variables is required; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionStrict">
      <summary>Gets or sets a Boolean value that specifies whether the task enforces strict type semantics to restrict implicit type conversions.</summary>
      <returns>true if the task enforces strict type semantics; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionStrictType">
      <summary>Gets or sets a value for the <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" /> property. Currently, the value can be set to "custom" and specifies whether the task generates warnings for implicit narrowing type conversions.</summary>
      <returns>A value for the <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.Platform">
      <summary>Gets or sets the processor platform to be targeted by the output file.</summary>
      <returns>The processor platform to be targeted by the output file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.RemoveIntegerChecks">
      <summary>Gets or sets a Boolean value that specifies whether to disable integer overflow error checks. </summary>
      <returns>true if the Vbc task will disable integer overflow error checks; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.RootNamespace">
      <summary>Gets or sets the root namespace for all type declarations.</summary>
      <returns>The root namespace for all type declarations.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.SdkPath">
      <summary>Gets or sets the location of mscorlib.dll and microsoft.visualbasic.dll.</summary>
      <returns>The location of mscorlib.dll and microsoft.visualbasic.dll.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.TargetCompactFramework">
      <summary>Gets or sets a Boolean value that specifies whether to target the .NET Compact Framework.</summary>
      <returns>true if the Vbc task should target the .NET Compact Framework; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ToolName">
      <summary>Gets the name of the tool executable file (vbc.exe).</summary>
      <returns>The name of the tool executable file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.UseHostCompilerIfAvailable">
      <summary>Gets or sets a Boolean value that specifies whether to use the in-process compiler object, if available. Used only by Visual Studio.</summary>
      <returns>true if the Vbc task will use the in-process compiler object, if available; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>true if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.Verbosity">
      <summary>Gets or sets the verbosity of the compiler’s output, which can be Quiet, Normal, or Verbose.</summary>
      <returns>The verbosity of the compiler’s output.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.WarningsAsErrors">
      <summary>Gets or sets a list of warnings to treat as errors.</summary>
      <returns>A list of warnings to treat as errors.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.WarningsNotAsErrors">
      <summary>Gets or sets a list of warnings that are not treated as errors.</summary>
      <returns>A list of warnings that are not treated as errors.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ModuleAssemblyName">
      <summary>Gets or sets the name of the assembly that this module will be a part of.</summary>
      <returns>The name of the assembly that this module will be a part of.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoVBRuntimeReference">
      <summary>Gets or sets a Boolean value that specifies whether the compiler should compile without a reference to the Visual Basic Runtime Library.</summary>
      <returns>true if the compiler should compile without a reference to the Visual Basic Runtime Library; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionInfer">
      <summary>Gets or sets a Boolean value that specifies whether to use local type inference in variable declarations.</summary>
      <returns>true if the Vbc task will use local type inference in variable declarations; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.VCBuild">
      <summary>Implements the VCBuild task. Use the VCBuild element in your project file to create and execute this task. For usage and parameter information, see VCBuild Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.VCBuild" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>Generates command line arguments that the VCBuild tool must run directly from the command line and not from a response file.</summary>
      <param name="commandLine">Command line builder to add arguments to.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.AdditionalLibPaths">
      <summary>Gets or sets additional paths to append to the LIBPATH environment variable before executing vcbuild.exe.</summary>
      <returns>The additional paths to append to the LIBPATH environment variable.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.AdditionalOptions">
      <summary>Gets or sets additional options you want to specify to the VCBuild tool.</summary>
      <returns>Additional options you want to specify to the VCBuild tool.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Clean">
      <summary>Gets or sets a Boolean value that specifies whether the VCBuild task outputs only clean build outputs. </summary>
      <returns>true if the VCBuild task outputs only clean build outputs; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Configuration">
      <summary>Gets or sets the name of the configuration and platform to build with such as Debug|Win32.</summary>
      <returns>The name of the configuration and platform to build with</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.EnvironmentOverride">
      <summary>Overrides the LIBPATH environment variable with <see cref="P:Microsoft.Build.Tasks.VCBuild.AdditionalLibPaths" /> and returns the new environment variables.</summary>
      <returns>Name/value pairs containing the new environment variable values.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.Execute">
      <summary>Executes the VCBuild task.</summary>
      <returns>true if task execution succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.GenerateFullPathToTool">
      <summary>Returns the full file path of the VCBuild tool (vcbuild.exe).</summary>
      <returns>The full file path of the VCBuild tool (vcbuild.exe).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Override">
      <summary>Gets or sets the location of a VCBuild property sheet file that overrides project file settings.</summary>
      <returns>The location of a VCBuild property sheet file that overrides project file settings.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Platform">
      <summary>Gets or sets the name of the platform to build for.</summary>
      <returns>The name of the platform to build for.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Projects">
      <summary>Gets or sets the projects to build.</summary>
      <returns>The projects to build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.Rebuild">
      <summary>Gets or sets a Boolean value that specifies whether the task performs a clean build of outputs before performing a build.</summary>
      <returns>true if the task performs a clean build of outputs before performing a build; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.SolutionFile">
      <summary>Gets or sets the full path to the solution file when building solutions, which is used to resolve solution-related Visual C++ project macros.</summary>
      <returns>The full path to the solution file when building solutions.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.ToolName">
      <summary>Returns the name of the VCBuild tool (vcbuild.exe).</summary>
      <returns>The name of the VCBuild tool (vcbuild.exe).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.UserEnvironment">
      <summary>This property is obsolete.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.VCBuild.ValidateParameters">
      <summary>Validates input parameters and logs errors or warnings, if any. Returns a Boolean value that indicates whether task execution should proceed.</summary>
      <returns>True if task execution should proceed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.AdditionalLinkLibraryPaths">
      <summary>Gets or sets additional reference paths to append to the LIB environment variable.</summary>
      <returns>Additional reference paths to append to the LIB environment variable.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.VCBuild.UseEnvironment">
      <summary>Gets or sets a Boolean value that specifies whether to use environment variables for INCLUDE and LIB paths.</summary>
      <returns>true if the VCBuild task will use environment variables for INCLUDE and LIB paths; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl">
      <summary>Gets or sets the URL of the Web page that is displayed in dialog boxes during ClickOnce installations.</summary>
      <returns>A string value that represents the URL of a Web page.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations">
      <summary>Gets or sets a list of one or more file type that are associated with the ClickOnce deployment manifest. File associations only valid only when .NET Framework 3.5 or later is targeted.</summary>
      <returns>A list of file types that are associated with the generated manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1">
      <summary>Gets or sets whether the application requires the .NET Framework 3.5 SP1.</summary>
      <returns>true if the application requires .NET Framework 3.5 SP1; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName">
      <summary>Gets or sets the name of the folder on the Start menu where the application is located after ClickOnce deployment.</summary>
      <returns>A string that represents the name of a Start menu folder.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset">
      <summary>Gets or sets the name of the .NET Framework subset to target.</summary>
      <returns>The name of the .NET Framework subset.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.CreateDesktopShortcut">
      <summary>Gets or sets whether an icon is created on the desktop during ClickOnce application installation.</summary>
      <returns>true if an icon is created on the desktop during installation; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.ErrorReportUrl">
      <summary>Gets or sets the URL of the Web page that is displayed in dialog boxes during ClickOnce installations.</summary>
      <returns>A string that represents the URL of a Web page.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.SuiteName">
      <summary>Gets or sets the name of the folder on the Start menu where the application is located after ClickOnce deployment.</summary>
      <returns>A string that represents the name of a Start menu folder.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.CompareFrameworkVersions(System.String,System.String)">
      <summary>Compares two .NET Framework versions and determines which version comes before the other one.</summary>
      <returns>An integer value that specifies the sort order position of a .NET Framework version instance relative to another version instance.</returns>
      <param name="versionA">The first .NET Framework version to compare.</param>
      <param name="versionB">The second .NET Framework version to compare.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.ConvertFrameworkVersionToString(System.String)">
      <summary>Converts the given .NET Framework version to a string.</summary>
      <returns>A string that represents the .NET Framework version.</returns>
      <param name="version">The .NET Framework version number to convert to a string.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion">
      <summary>The target .NET Framework version for the project.</summary>
      <returns>A string that represents the .NET Framework version.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly">
      <summary>Determines whether the application requires the .NET Framework 3.5 SP1.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Assemblies">
      <summary>Gets or sets the assemblies referenced in the application.</summary>
      <returns>The assemblies referenced in the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.CreateDesktopShortcut">
      <summary>Gets or sets whether to create a shortcut icon on the desktop during installation.</summary>
      <returns>true if an icon is added to the desktop; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.DeploymentManifestEntryPoint">
      <summary>Gets or sets the manifest file name for the application.</summary>
      <returns>The assembly that should be executed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.EntryPoint">
      <summary>Gets or sets the assembly that should be executed when the application is run.</summary>
      <returns>The assembly that should be executed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ErrorReportUrl">
      <summary>Gets or sets the Web site that is displayed in dialog boxes that are encountered during ClickOnce installations.</summary>
      <returns>The URL of the Web site to display.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Execute">
      <summary>Executes the task that determines whether the application requires .NET Framework 3.5 SP1.</summary>
      <returns>true if the application requires .NET Framework 3.5 SP1; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Files">
      <summary>Gets or sets the list of files that will be deployed when the application is published.</summary>
      <returns>The files that will be deployed.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ReferencedAssemblies">
      <summary>Gets or sets the assemblies referenced in the project.</summary>
      <returns>The assemblies in the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.RequiresMinimumFramework35SP1">
      <summary>Gets or sets whether the application requires .NET Framework 3.5 SP1.</summary>
      <returns>true if the application requires .NET Framework 3.5 SP1; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SigningManifests">
      <summary>Gets or sets whether the ClickOnce manifests are signed.</summary>
      <returns>true if the ClickOnce manifests are signed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SuiteName">
      <summary>Gets or sets the name of the folder on the Start menu in which the application will be installed.</summary>
      <returns>The name of the installation folder.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.TargetFrameworkVersion">
      <summary>Gets or sets the version of the .NET Framework that this application targets.</summary>
      <returns>The name of the .NET Framework version.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FullTargetFrameworkSubsetNames">
      <summary>A string that contains the names of the subsets of the specified target framework.</summary>
      <returns>A string value that contains subset names.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblySubsetTables">
      <summary>Gets or sets a Boolean value that specifies whether the task should look for and use additional installed assembly subset tables (also known as Subset Lists), which are found in the SubsetList directory under the provided TargetFrameworkDirectories.</summary>
      <returns>true if additional assembly subset tables are used; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblySubsetTables">
      <summary>An <see cref="T:Microsoft.Build.Framework.ITaskItem" /> that represents a list of XML files that contain assemblies that are expected to be in the target subset.</summary>
      <returns>An <see cref="T:Microsoft.Build.Framework.ITaskItem" /> list of XML files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkSubsets">
      <summary>A list of target framework subset names that will be searched for in the target framework directories.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.DeploymentManifestEntryPoint">
      <summary>Gets or sets the name of the deployment manifest.</summary>
      <returns>The deployment manifest name as an entry point.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputDeploymentManifestEntryPoint">
      <summary>Gets or sets the output deployment manifest entry point.</summary>
      <returns>A deployment manifest entry point.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputEntryPoint">
      <summary>Gets or sets the output entry point.</summary>
      <returns>An output entry point.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.SigningManifests">
      <summary>Gets or sets a value that indicates whether the manifests are signed.</summary>
      <returns>true if the manifests are signed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkVersion">
      <summary>Gets or sets the target .NET Framework version.</summary>
      <returns>The version of the target .NET Framework.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder">
      <summary>The top-level object for the bootstrapper system.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.#ctor">
      <summary>Initializes a new instance of the BootstrapperBuilder class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings)">
      <summary>Generates a bootstrapper by using the specified settings.</summary>
      <returns>The results of the bootstrapper generation.</returns>
      <param name="settings">The properties used to create the bootstrapper.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetOutputFolders(System.String[],System.String,System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation)">
      <summary>Returns the directories to which bootstrapper component files are copied when they are created, given the specified settings.</summary>
      <returns>The directories to which bootstrapper component files are copied when they are created, given the specified settings.</returns>
      <param name="productCodes">The <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductCode" /> values of the selected components.</param>
      <param name="culture">The culture used to create the bootstrapper.</param>
      <param name="fallbackCulture">The fallback culture used to create the bootstrapper.</param>
      <param name="componentsLocation">Specifies how the bootstrapper packages the selected components.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path">
      <summary>Gets or sets the location of the required bootstrapper files.</summary>
      <returns>The path for the required bootstrapper files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Products">
      <summary>Gets all products available at the current bootstrapper <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" />.</summary>
      <returns>All products available at the current bootstrapper <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" />.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage">
      <summary>Defines messages that occur during the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> build operation.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpId">
      <summary>Gets the MSBuild Help ID for the host IDE.</summary>
      <returns>An integer value that represents the Help ID.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpKeyword">
      <summary>Gets the MSBuild F1 Help keyword for the host IDE, or null.</summary>
      <returns>A string that represents the F1 Help keyword.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Message">
      <summary>Gets the details of the build message.</summary>
      <returns>A text string that describes the details of the build message.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Severity">
      <summary>Gets the severity of the build message.</summary>
      <returns>The severity of the build message as defined by the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity" /> class.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity">
      <summary>This enumeration provides three levels of importance for build messages.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Info">
      <summary>Indicates that the message corresponds to build information.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Warning">
      <summary>Indicates that the message corresponds to a build warning.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Error">
      <summary>Indicates that the message corresponds to a build error.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults">
      <summary>Represents the results of the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> build operation.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.ComponentFiles">
      <summary>Gets paths to the copied component installer files.</summary>
      <returns>A string array that contains paths for the copied component installer files.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.KeyFile">
      <summary>Gets the path of the generated primary bootstrapper file.</summary>
      <returns>A string representing the path of the generated primary bootstrapper file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Messages">
      <summary>Gets the build messages generated from the bootstrapper build.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage" /> messages from the bootstrapper build.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Succeeded">
      <summary>Gets a Boolean value that indicates whether the bootstrapper build was successful.</summary>
      <returns>A Boolean value indicating whether the bootstrapper build was successful. Returns true if the bootstrapper build was successful; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationRequiresElevation">
      <summary>Gets or sets a value indicating whether a component runs with elevated permissions when it is installed on a target computer.</summary>
      <returns>true if the installed component runs with elevated permissions; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation">
      <summary>Specifies the way that required components will be published.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.HomeSite">
      <summary>Specifies that products be found according to the redistributable vendor's designated URL.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Relative">
      <summary>Specifies that products be located relative to the generated bootstrapper.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute">
      <summary>Specifies that products be located at a specific location.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationRequiresElevation">
      <summary>Gets or sets a value indicating whether a component runs with elevated permissions when it is installed on a target computer.</summary>
      <returns>true if the installed component runs with elevated permissions; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct">
      <summary>Represents a product that the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> finds in the <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> property.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Includes">
      <summary>Gets all products that this product installs.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection" /> object that contains all products that this product installs.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Name">
      <summary>Gets a human-readable name for this product.</summary>
      <returns>A string that contains a human-readable name for this product.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductBuilder">
      <summary>Gets the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> representation of this product.</summary>
      <returns>Returns a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object that represents this product.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductCode">
      <summary>Gets the unique product identifier of this product.</summary>
      <returns>Returns a string that specifies the unique product identifier of this product.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder">
      <summary>Represents a buildable version of a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" />.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder.Product">
      <summary>Gets the <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that corresponds to this <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that corresponds to this <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection">
      <summary>Contains a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder)">
      <summary>Adds a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to the product builder collection.</summary>
      <param name="builder">The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to add to the collection.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection">
      <summary>Represents a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> objects.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Count">
      <summary>Gets the number of elements that are contained in the product collection.</summary>
      <returns>The number of elements that are contained in the product collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Item(System.Int32)">
      <summary>Retrieves the product at the specified index.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the element to get.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Product(System.String)">
      <summary>Retrieves the product with the specified product code.</summary>
      <returns>The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> object that has the specified product code; null if the specified product code is not found.</returns>
      <param name="productCode">The unique identifier of the product to get.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection">
      <summary>Contains a collection of <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> objects.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder)">
      <summary>Adds a <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to the product builder collection.</summary>
      <param name="builder">The <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> object to add to the collection.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the product builder collection.</summary>
      <returns>An enumerator that can iterate through the product builder collection.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest">
      <summary>Describes a ClickOnce or native Win32 application manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile">
      <summary>Gets or sets the application configuration file.</summary>
      <returns>A string that represents the name of the application configuration file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.EntryPoint">
      <summary>Gets or sets an assembly reference that represents the entry point of the application.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> object that represents the entry point of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile">
      <summary>Gets or sets the program icon file.</summary>
      <returns>A string that represents the name of the icon file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest">
      <summary>Gets or sets a value that specifies whether the manifest is a ClickOnce application manifest or a native Win32 application manifest.</summary>
      <returns>A Boolean value that indicates whether the manifest is a ClickOnce application manifest (True) or a native Win32 manifest (False).</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.MaxTargetPath">
      <summary>Gets or sets a value that specifies the maximum allowed length of a file path in a ClickOnce application deployment. If this value is specified, the length of each file path in the application is checked against this limit. Any items that exceed the limit cause a warning message. If this input is not specified or is zero, no checking is performed. For a native Win32 manifest, this input is ignored.</summary>
      <returns>An integer that indicates the maximum allowed length of a file path in a ClickOnce application deployment.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription">
      <summary>Gets or sets a value that specifies a textual description for the operating system dependency.</summary>
      <returns>A string that indicates the operating system dependency.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl">
      <summary>Gets or sets a value that specifies a support URL for the operating system dependency.</summary>
      <returns>A string indicating the support URL for the operating system dependency.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSVersion">
      <summary>Gets or sets a value that specifies the minimum required operating system version required by the application.</summary>
      <returns>A string that indicates the minimum required operating system version required by the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TrustInfo">
      <summary>Gets or sets a value that specifies a trust object that defines the application security.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo" /> object that defines the application security.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Validate">
      <summary>Performs various checks to verify the validity of the manifest. Any resulting errors or warnings are reported in the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> object.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlConfigFile">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointIdentity">
      <summary>Gets or sets a property that is used to serialize the entry point identity to an XML file.</summary>
      <returns>The entry point identity.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointParameters">
      <summary>Gets or sets a property that is used to serialize the entry point parameters to an XML file.</summary>
      <returns>The entry point parameters.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointPath">
      <summary>Gets or sets a property that specifies the entry point for executing the assembly and that is used to serialize the entry point to an XML file.</summary>
      <returns>The entry point for executing the assembly.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIconFile">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIsClickOnceManifest">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest" /> property to an XML file.</summary>
      <returns>true or false. The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSBuild">
      <summary>Gets or sets a property that is used to serialize the build version of the operating system to an XML file.</summary>
      <returns>The build version of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSDescription">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMajor">
      <summary>Gets or sets a property that is used to serialize the major portion of the version number of the operating system to an XML file.</summary>
      <returns>The major portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMinor">
      <summary>Gets or sets a property that is used to serialize the minor portion of the version number of the operating system to an XML file.</summary>
      <returns>The minor portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSRevision">
      <summary>Gets or sets a property that is used to serialize the revision portion of the version number of the operating system to an XML file.</summary>
      <returns>The revision portion of the version number of the operating system.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSSupportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser">
      <summary>Gets or sets a value that specifies whether the application is hosted in a browser (as WPF Web Browser Applications are).</summary>
      <returns>A Boolean value that indicates whether the application being deployed will be hosted in a browser (True), or not (False). True applies only to WPF Web Browser Applications.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product">
      <summary>Gets or sets a value that specifies the ProductName property in the project file.</summary>
      <returns>A string value that corresponds to the ProductName property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher">
      <summary>Gets or sets a value that specifies the PublisherName property in the project file.</summary>
      <returns>A string value that corresponds to the PublisherName property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl">
      <summary>Gets or sets a value that specifies the SupportUrl property in the project file.</summary>
      <returns>A string value that corresponds to the SupportUrl property in the project file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust">
      <summary>Gets or sets a value that specifies whether the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" />, <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" />, and <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> properties are written to the application manifest.</summary>
      <returns>A Boolean value that indicates whether the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" />, <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" />, and <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> properties are written to the application manifest. If the value is True, they are written to the application manifest. If the value is False, these properties are ignored.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlHostInBrowser">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser" /> property to an XML file.</summary>
      <returns>true or false. The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlProduct">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlPublisher">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSupportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlUseApplicationTrust">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest">
      <summary>Describes a Win32 assembly manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.ExternalProxyStubs">
      <summary>Gets the set of external proxy stubs referenced by the manifest for isolated applications and Reg-Free COM.</summary>
      <returns>Returns the set of external proxy stubs referenced by the manifest for isolated applications and Reg-Free COM.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.XmlExternalProxyStubs">
      <summary>Gets or sets the set of external proxy stubs referenced by the manifest for isolated applications and Reg-Free COM in XML format.</summary>
      <returns>Returns the set of external proxy stubs referenced by the manifest for isolated applications and Reg-Free COM in XML format.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType">
      <summary>This class represents the type of an assembly reference.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.Unspecified">
      <summary>Assembly type is unspecified and will be determined by the <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo" /> method.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ClickOnceManifest">
      <summary>Specifies a ClickOnce manifest.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ManagedAssembly">
      <summary>Specifies a .NET Framework assembly.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.NativeAssembly">
      <summary>Specifies a Win32 native assembly.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference">
      <summary>Describes base functionality common to both file references and assembly references.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference" /> class.</summary>
      <param name="path">The path for the assembly base reference.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Group">
      <summary>Gets or sets the group for on-demand download functionality.</summary>
      <returns>A string indicating the group for on-demand download functionality. A blank string indicates a primary file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash">
      <summary>Gets or sets the SHA1 hash of the file.</summary>
      <returns>A string indicating the SHA1 hash of the file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional">
      <summary>Gets or sets whether the file is optional for on-demand download functionality.</summary>
      <returns>A Boolean value indicating whether the file is optional for on-demand download functionality.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ResolvedPath">
      <summary>Gets or sets the resolved path to the file. This path is determined by the Resolve method, and is used to compute the file information by the <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo" /> method.</summary>
      <returns>A string indicating the resolved path to the file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size">
      <summary>Gets or sets the file size in bytes.</summary>
      <returns>The file size in bytes.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SortName">
      <summary>Gets a value that is used to sort the referenced assemblies in the application manifest. </summary>
      <returns>The name to sort by.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SourcePath">
      <summary>Gets or sets the source path of the file.</summary>
      <returns>A string indicating the source path of the file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.TargetPath">
      <summary>Gets or sets the target path of the file. This is the path that is used for specification in the generated manifest.</summary>
      <returns>A string indicating the target path of the file.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ToString">
      <summary>Returns the base reference name.</summary>
      <returns>A string indicating the base reference name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlGroup">
      <summary>Gets or sets the group for on-demand download functionality.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHash">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHashAlgorithm">
      <summary>Gets or sets a property that is used to serialize the hash algorithm to an XML file.</summary>
      <returns>The hash algorithm.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlIsOptional">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlPath">
      <summary>Gets or sets a property that is used to serialize the path to an XML file.</summary>
      <returns>The path of the reference.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlSize">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass">
      <summary>Represents a COM class that is described in a manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> class. </summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId">
      <summary>Gets the class identifier (ClsId) for a <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</summary>
      <returns>A <see cref="T:System.String" /> formatted in the pattern {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}, where the value of the GUID is represented as a series of lower-case hexadecimal digits in groups of 8, 4, 4, 4, and 12 digits and separated by hyphens. An example of a return value is "{382c74c3-721d-4f34-80e5-57657b6cbc27}".</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description">
      <summary>Gets the description of a <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</summary>
      <returns>A description of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId">
      <summary>Gets the programmatic identifier (ProgId) of a <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</summary>
      <returns>The programmatic identifier of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel">
      <summary>Gets the threading model of a <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> object.</summary>
      <returns>A string such as "Apartment".</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId">
      <summary>Gets a value that is the identifier of the type library that contains type information about the class.</summary>
      <returns>The identifier of the type library that contains type information about the class. A <see cref="T:System.String" /> formatted in the pattern {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}, where the value of the GUID is represented as a series of lower-case hexadecimal digits in groups of 8, 4, 4, 4, and 12 digits and separated by hyphens. An example of a return value is "{382c74c3-721d-4f34-80e5-57657b6cbc27}".</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlClsId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlDescription">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlProgId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlThreadingModel">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlTlbId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest">
      <summary>Represents a ClickOnce deployment manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl">
      <summary>Gets or sets the update location for the application.</summary>
      <returns>A string that indicates the update location for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation">
      <summary>Gets or sets a value indicating whether the application should be blocked from being started by means of a URL.</summary>
      <returns>true if the application is blocked from being started by means of a URL otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.EntryPoint">
      <summary>Gets or sets a deployment reference that is the entry point of the application.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> object that represents the entry point of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install">
      <summary>Gets or sets a value indicating whether the application is an installed application or an online-only application.</summary>
      <returns>true if the application is an installed application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions">
      <summary>Gets or sets a value indicating whether .deploy file extension mapping is used.</summary>
      <returns>true if .deploy file extension mapping is used; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion">
      <summary>Gets or sets the minimum required version number for an application.</summary>
      <returns>A string indicating the minimum required version number for an application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product">
      <summary>Gets or sets the name of the application.</summary>
      <returns>A string that indicates the name of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher">
      <summary>Gets or sets the publisher of the application.</summary>
      <returns>A string that indicates the publisher of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl">
      <summary>Gets or sets the link that appears in Add or Remove Programs in Control Panel for the application.</summary>
      <returns>A string that indicates the support URL.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters">
      <summary>Gets or sets a value indicating whether URL query-string parameters are available to the application.</summary>
      <returns>true if URL query-string parameters are available to the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled">
      <summary>Gets or sets a value indicating whether the application is updatable.</summary>
      <returns>true if the application is updatable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval">
      <summary>Gets or sets the update interval for the application.</summary>
      <returns>An integer that indicates the update interval for the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode">
      <summary>Gets or sets an object indicating whether updates should be checked in the foreground before the application is started, or in the background while the application is running.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode" /> object that indicates whether updates should be checked before the application is started, or while the application is running.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit">
      <summary>Gets or sets the units used for the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> property.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit" /> object that indicates the units used for the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> property.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Validate">
      <summary>Performs various checks to verify the validity of the manifest. Any resulting errors or warnings are reported in the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> object.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDeploymentUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDisallowUrlActivation">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlInstall">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMapFileExtensions">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMinimumRequiredVersion">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlProduct">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlPublisher">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSupportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlTrustUrlParameters">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateEnabled">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateInterval">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateMode">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateUnit">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference">
      <summary>Describes a manifest file reference.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference" /> class.</summary>
      <param name="path">The specified source path of the file.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses">
      <summary>Returns the set of COM classes referenced by the manifest for isolated applications and registration-free COM.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> objects representing the set of COM classes referenced by the manifest for isolated applications and registration-free COM.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.IsDataFile">
      <summary>Gets or sets whether the file is a data file.</summary>
      <returns>A Boolean value indicating whether the file is a data file.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs">
      <summary>Returns the set of proxy stubs referenced by the manifest for isolated applications and registration-free COM.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub" /> objects representing the set of proxy stubs referenced by the manifest for isolated applications and registration-free COM.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs">
      <summary>Returns the set of type libraries referenced by the manifest.</summary>
      <returns>An array of <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib" /> objects representing the set of type libraries referenced by the manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlComClasses">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlProxyStubs">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlTypeLibs">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlWriteableType">
      <summary>Gets or sets a value that indicates whether the file is a data file.</summary>
      <returns>"applicationData" is the only valid setting.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest">
      <summary>Represents base functionality common to all supported manifest types.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity">
      <summary>Gets or sets the identity of the manifest.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> object representing the identity of the manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences">
      <summary>Gets the set of assemblies that the manifest references.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection" /> object representing the set of assemblies that the manifest references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description">
      <summary>Gets or sets a textual description for the manifest.</summary>
      <returns>A string describing the manifest.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.EntryPoint">
      <summary>Gets or sets an assembly reference that is the entry point of the application.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> object representing an assembly reference that is the entry point of the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences">
      <summary>Gets the set of files that the manifest references.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection" /> object representing the set of files that the manifest references.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream">
      <summary>Gets or sets the input stream from which the manifest was read.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object representing the input stream from which the manifest was read.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.OutputMessages">
      <summary>Gets a collection of current error and warning messages.</summary>
      <returns>An <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> object, which contains a collection of current error and warning messages.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ReadOnly">
      <summary>Gets or sets a value indicating whether the manifest is operating in read-only or read-write mode.</summary>
      <returns>A Boolean value indicating whether the manifest is operating in read-only or read-write mode.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles">
      <summary>Locates all specified assembly and file references by searching in the same directory as the loaded manifest, or in the current directory.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles(System.String[])">
      <summary>Locates all specified assembly and file references by searching in the specified directories.</summary>
      <param name="searchPaths">An array of strings specifying the directories to search.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.SourcePath">
      <summary>Gets or sets the location where the manifest was loaded or saved.</summary>
      <returns>A string indicating the location where the manifest was loaded or saved.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ToString">
      <summary>Returns the manifest name.</summary>
      <returns>A string indicating the name of the manifest.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo">
      <summary>Updates file information for each referenced assembly and file.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Validate">
      <summary>Performs various checks to verify the validity of the manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ValidatePlatform">
      <summary>Validates the manifest platform.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyIdentity">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyReferences">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlDescription">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlFileReferences">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlSchema">
      <summary>Gets or sets a property that is used to serialize the schema to an XML file.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader">
      <summary>Reads an XML manifest file into an object representation.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.IO.Stream,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="input">Specifies an input stream.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="path">The fully qualified path name of the input file. For example, the full path may be c:\directory\folder\filename.manifest.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.IO.Stream,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="manifestType">Specifies the expected type of the manifest. Valid values are AssemblyManifest, ApplicationManifest, or DeployManifest.</param>
      <param name="input">Specifies an input stream.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.String,System.Boolean)">
      <summary>Reads the specified manifest XML and returns an object representation.</summary>
      <returns>A <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> object representation of the manifest. Can be cast to <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />, <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" />, or <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> to access more specific functionality.</returns>
      <param name="manifestType">Specifies the expected type of the manifest. Valid values are AssemblyManifest, ApplicationManifest, or DeployManifest.</param>
      <param name="path">The path name of the input file.</param>
      <param name="preserveStream">Specifies whether to preserve the input stream in the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> property of the resulting manifest object. Used by <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> to reconstitute input which is not represented in the object representation.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter">
      <summary>Writes an object representation of a manifest to XML.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
      <summary>Writes the specified manifest object to XML.</summary>
      <param name="manifest">The manifest object.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.IO.Stream)">
      <summary>Writes the specified manifest object to XML.</summary>
      <param name="manifest">The manifest object.</param>
      <param name="output">Specifies an output stream.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.String)">
      <summary>Writes the specified manifest object to XML.</summary>
      <param name="manifest">The manifest object.</param>
      <param name="path">The path name of the output file.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection">
      <summary>This class represent a collection for output messages.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.Clear">
      <summary>Removes all objects from the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.ErrorCount">
      <summary>Gets the number of error messages in the collection.</summary>
      <returns>The number of error messages in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>Returns an <see cref="T:System.Collections.IEnumerator" /> object that can iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.Item(System.Int32)">
      <summary>Gets the element at the specified index.</summary>
      <returns>Returns the file reference instance.</returns>
      <param name="index">The zero-based index of the entry to get.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.WarningCount">
      <summary>Gets the number of warning messages in the collection.</summary>
      <returns>The number of warning messages in the collection.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities">
      <summary>Provides a set of utility functions for manipulating security permision sets and signing.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])">
      <summary>Generates a permission set by computing the zone default permission set, removing any excluded permissions, and adding any included permissions.</summary>
      <returns>Returns the generated permission set.</returns>
      <param name="targetZone">Specifies a zone default permission set, which is obtained from machine policy. Valid values are Internet, LocalIntranet, or Custom. If Custom is specified, the generated permission set is based only on the <paramref name="includedPermissionSet" /> parameter.</param>
      <param name="includedPermissionSet">A <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet" /> object containing the set of permissions to be explicitly included in the generated permission set. Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of <paramref name="targetZone" /> or <paramref name="excludedPermissions" /> parameters.</param>
      <param name="excludedPermissions">An array of permission identity strings to be excluded from the zone default permission set. Permission identity strings can be computed using the <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)" /> method. This parameter is ignored if <paramref name="targetZone" /> is not Internet or LocalIntranet.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])">
      <summary>Converts an array of permission identity strings to a permission set object.</summary>
      <returns>Returns the converted permission set.</returns>
      <param name="ids">An array of permission identity strings.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)">
      <summary>Converts a permission set object to an array of permission identity strings.</summary>
      <returns>Returns an array of permission identity strings.</returns>
      <param name="permissionSet">The input permission set to be converted.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)">
      <summary>Signs a ClickOnce manifest or PE file.</summary>
      <param name="cert">The certificate to be used to sign the file.</param>
      <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
      <param name="path">The name of the file to sign.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)">
      <summary>Signs a ClickOnce manifest.</summary>
      <param name="certPath">The certificate to be used to sign the file. The certificate must contain a private key. The KeyUsage extension is optional, but if it is present, DigitalSignature must be set to True. The EnhancedKeyUsage extension is also optional, but if it is present, the certificate must contain object identifier (OID) support.</param>
      <param name="certPassword">The certificate password.</param>
      <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
      <param name="path">The name of the file to sign.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)">
      <summary>Signs a ClickOnce manifest or PE file.</summary>
      <param name="certThumbprint">Specifies the thumbprint, which is the SHA1 hash of the signing certificate, which is kept in your personal certificate store.</param>
      <param name="timestampUrl">Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.</param>
      <param name="path">The name of the file to sign.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)">
      <summary>Converts an XML element to a permission set object.</summary>
      <returns>The converted permission set object.</returns>
      <param name="element">An XML representation of the permission set.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib">
      <summary>Represents a type library.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib" /> class. </summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Flags">
      <summary>Gets the string representation of the type library flags for this type library.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.HelpDirectory">
      <summary>Gets the directory where the Help file for the types in the type library is located.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.ResourceId">
      <summary>Gets the hexadecimal string representation of the locale identifier (LCID).</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TlbId">
      <summary>Gets the unique ID of the type library.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Version">
      <summary>Gets the version number of the type library.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlFlags">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Flags" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlHelpDirectory">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.HelpDirectory" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlResourceId">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.ResourceId" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlTlbId">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TlbId" /> property to an XML file.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlVersion">
      <summary>Get or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Version" /> property to an XML file.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode">
      <summary>Specifies how the application checks for updates.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Background">
      <summary>Check for updates in the background, after the application starts.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Foreground">
      <summary>Check for updates in the foreground, before the application starts.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit">
      <summary>Specifies the units for the update interval.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Hours">
      <summary>Update interval is in hours.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Days">
      <summary>Update interval is in days.</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Weeks">
      <summary>Update interval is in weeks.</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass">
      <summary>Represents a window class in an application manifest.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass" /> class. </summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass" /> class, specifying information about the versioning status of the window class. </summary>
      <param name="name">The name of the class.</param>
      <param name="versioned">Controls whether the internal window class name that is used in registration contains the version of the assembly that contains the window class.</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name">
      <summary>Gets the name of the window class.</summary>
      <returns>The name of the window class.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned">
      <summary>Gets a value that controls whether the internal window class name that is used in registration contains the version of the assembly that contains the window class.</summary>
      <returns>yes if the name that is used in registration contains the version of the assembly; otherwise, no. The default is yes.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlName">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlVersioned">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl">
      <summary>Gets or sets the URL of the error report.</summary>
      <returns>A string that contains the URL of the error report.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations">
      <summary>Gets or sets the file associations that are defined in the manifest.</summary>
      <returns>A string that contains the file associations.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName">
      <summary>Gets or sets the suite name that is defined in the manifest.</summary>
      <returns>A string that contains the suite name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlErrorReportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlFileAssociations">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSuiteName">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut">
      <summary>Gets or sets a value that indicates whether to create a desktop shortcut.</summary>
      <returns>"true" or "false". A string that contains a value that indicates whether to create a desktop shortcut.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl">
      <summary>Gets or sets the URL of the error report.</summary>
      <returns>A string that contains the URL of the error report.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName">
      <summary>Gets or sets the suite name that is defined in the manifest.</summary>
      <returns>A string that contains the suite name.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCreateDesktopShortcut">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlErrorReportUrl">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl" /> property.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSuiteName">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName" /> property to an XML file.</summary>
      <returns>The value of the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName" /> property.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation">
      <summary>Represents a file name extension to be associated with the application.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation" /> class.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon">
      <summary>Gets or sets the icon to use for files that use a particular <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" />.</summary>
      <returns>The name of the file that contains the icon.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description">
      <summary>Gets or sets the description of the file type for use by the shell.</summary>
      <returns>A description of the file type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension">
      <summary>Gets or sets the file name extension to be associated with the application.</summary>
      <returns>The file name extension to be associated with the application.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId">
      <summary>Gets or sets the name that uniquely identifies the file association's file type.</summary>
      <returns>The name that uniquely identifies the file type.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDefaultIcon">
      <summary>Gets or sets a property that is used to serialize the file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon" /> property to an XML file.</summary>
      <returns>An XML representation of this file association's DefaultIcon.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDescription">
      <summary>Gets or sets a property that is used to serialize the file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description" /> property to an XML file.</summary>
      <returns>An XML representation of this file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description" /> value.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlExtension">
      <summary>Gets or sets a property that is used to serialize the file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" /> property to an XML file.</summary>
      <returns>An XML representation of this file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" /> value.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlProgId">
      <summary>Gets or sets a property that is used to serialize the <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId" /> property to an XML file.</summary>
      <returns>An XML representation of this file association's <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId" /> value.</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection">
      <summary>Represents a collection of file associations.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation)">
      <summary>Adds the specified file association to the collection.</summary>
      <param name="fileAssociation">The file association to add.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Clear">
      <summary>Removes all file associations from the collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Count">
      <summary>Gets the number of file associations in the collection.</summary>
      <returns>The number of file associations in the collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An interface that represents an enumerator that can iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Item(System.Int32)">
      <summary>Gets the file association that appears at the specified index.</summary>
      <returns>The file association at the specified index.</returns>
      <param name="index">The zero-based index of the file association to get.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.ICscHostObject2">
      <summary>Defines an interface that allows the Csc task to communicate with the host integrated development environment (IDE).</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject2.SetWin32Manifest(System.String)">
      <summary>Specifies a manifest file to insert into the assembly.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="win32Manifest">The name of the manifest to insert into the assembly.</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject2">
      <summary>Defines an interface that allows the Vbc task to communicate with the host integrated development environment (IDE).</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetModuleAssemblyName(System.String)">
      <summary>Specifies the name of the module file.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="moduleAssemblyName">A string representing the name of the module file.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetOptionInfer(System.Boolean)">
      <summary>Specifies a value indicating whether variable types must be explicitly declared.</summary>
      <returns>true if the method was successful; otherwise, false.</returns>
      <param name="optionInfer">true to require the explicit declaration of variable types; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetWin32Manifest(System.String)"></member>
  </members>
</doc>